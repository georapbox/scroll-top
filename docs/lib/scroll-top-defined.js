var t,e,i,n;function s(t,e,i){if(!e.has(t))throw new TypeError("attempted to "+i+" private field on non-instance");return e.get(t)}function o(t,e){return e.get?e.get.call(t):e.value}function r(t,e){return o(t,s(t,e,"get"))}function l(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function h(t,e,i){l(t,e),e.set(t,i)}function c(t,e,i){if(e.set)e.set.call(t,i);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=i}}function a(t,e,i){return c(t,s(t,e,"set"),i),i}function u(t,e,i){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return i}function b(t,e){l(t,e),e.add(t)}t={},e="ScrollTop",i=function(){return g},Object.defineProperty(t,e,{get:i,set:n,enumerable:!0,configurable:!0});const f=document.createElement("template");f.innerHTML='\n  <style>\n    :host {\n      all: initial;\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 1px;\n    }\n    :host button {\n      position: fixed;\n      bottom: 16px;\n      right: 16px;\n      cursor: pointer;\n    }\n    :host([hidden]) button {\n      opacity: 0;\n      visibility: hidden;\n    }\n  </style>\n  <button type="button" part="button"><slot>Scroll to top</slot></button>\n';var p=new WeakMap,d=new WeakSet,v=new WeakSet,m=new WeakMap;class g extends HTMLElement{get visibleAfter(){return this.getAttribute("visible-after")}set visibleAfter(t){this.setAttribute("visible-after",t)}get smoothScrolling(){return this.hasAttribute("smooth-scrolling")}set smoothScrolling(t){t?this.setAttribute("smooth-scrolling",""):this.removeAttribute("smooth-scrolling")}get topOffset(){return Number(this.getAttribute("top-offset"))||0}set topOffset(t){const e=Number(t)||0;this.setAttribute("top-offset",e>0?e:0)}static get observedAttributes(){return["visible-after"]}attributeChangedCallback(t,e,i){"visible-after"===t&&u(this,v,y).call(this,i)}connectedCallback(){u(this,d,w).call(this,"visibleAfter"),u(this,d,w).call(this,"smoothScrolling"),u(this,d,w).call(this,"topOffset"),this.topOffset||(this.topOffset=0),this.visibleAfter||(this.visibleAfter="50vh"),a(this,p,this.shadowRoot.querySelector("button")),u(this,v,y).call(this,this.visibleAfter);try{this.observer=new IntersectionObserver((([t])=>{this.hidden=t.isIntersecting,r(this,p).part.toggle("button--hidden",t.isIntersecting),this.dispatchEvent(new CustomEvent("scroll-top:visibility-change",{bubbles:!0,composed:!0,detail:{visible:!t.isIntersecting}}))})),this.observer.observe(this)}catch(t){console.error(t)}r(this,p).addEventListener("click",r(this,m))}disconnectedCallback(){this.observer&&(this.observer.disconnect(),this.observer=null),r(this,p).removeEventListener("click",r(this,m))}static defineCustomElement(t="scroll-top"){"undefined"==typeof window||window.customElements.get(t)||window.customElements.define(t,g)}constructor(){super(),b(this,d),b(this,v),h(this,p,{writable:!0,value:void 0}),h(this,m,{writable:!0,value:t=>{t.preventDefault();const e={top:this.topOffset};this.smoothScrolling&&(e.behavior="smooth"),document.scrollingElement.scrollTo(e)}}),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(f.content.cloneNode(!0))}}function w(t){if(Object.prototype.hasOwnProperty.call(this,t)){const e=this[t];delete this[t],this[t]=e}}function y(t){"string"==typeof t&&(this.style.height=t)}g.defineCustomElement();export{g as ScrollTop};
//# sourceMappingURL=scroll-top-defined.js.map
